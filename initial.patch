Index: src/test/resources/schema.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/resources/schema.sql	(revision 9573e1753a44a244a2b16254c5cd64625a6f7e48)
+++ src/test/resources/schema.sql	(date 1584028512626)
@@ -1,35 +1,83 @@
+drop table if exists People;
+CREATE TABLE if not exists People (
+  PeopleId int(11) NOT NULL AUTO_INCREMENT,
+  FirstName varchar(20) NOT NULL,
+  Surname varchar(20) NOT NULL,
+  Email varchar(40)  NOT NULL,
+  password varchar(255) DEFAULT NULL,
+  Enabled int(4) NOT NULL DEFAULT 1
+);
+
+drop table if exists authorities;
+CREATE TABLE  if not exists authorities (
+    PeopleID int(11) NOT NULL,
+    authority varchar(50) NOT NULL
+);
+
+drop table if exists Events;
+CREATE TABLE  if not exists `Events` (
+  `EventId` int(11) NOT NULL AUTO_INCREMENT,
+  `Name` varchar(100) NOT NULL,
+  `Organiser` int(11) NOT NULL,
+  `Location` varchar(40)  NOT NULL,
+  `Description` varchar(255)  NOT NULL,
+  `TeamBased` tinyint(1) NOT NULL,
+  `DietReq` tinyint(1) NOT NULL,
+  `Date` date NOT NULL,
+  `Time` varchar(45) NOT NULL,
+  `TeamSize` int(11) DEFAULT NULL,
+  PRIMARY KEY (`EventId`)
+);
 
-create table if not exists Events (
-    EventId int(11) NOT NULL AUTO_INCREMENT,
-    Name varchar(100) NOT NULL,
-    Organiser int(11) NOT NULL,
-    Location varchar(40) NOT NULL,
-    Description varchar(255) NOT NULL,
-    TeamBased int(1) NOT NULL,
-    DietReq int(1) NOT NULL,
-    Date date NOT NULL,
-    Time varchar(45) NOT NULL,
-    TeamSize int(11) DEFAULT NULL,
-    PRIMARY KEY (EventId)
+drop table if exists Status;
+CREATE TABLE  if not exists `Status` (
+  `StatusId` int(11) NOT NULL AUTO_INCREMENT,
+  `Stat` varchar(10) NOT NULL,
+  PRIMARY KEY (`StatusId`)
 );
-create table if not exists BookingStatus (
-    bookingStatusId int(11) NOT NULL,
-    peopleId        int(11) NOT NULL,
-    eventId         int(11) NOT NULL,
-    statusId        int(11) NOT NULL,
-    dietReq         varchar(255) DEFAULT NULL,
-    teammembers     varchar(255)
+
+drop table if exists Teams;
+CREATE TABLE if not exists  `Teams` (
+  `TeamId` int(11) NOT NULL AUTO_INCREMENT,
+  `TeamName` varchar(15)  DEFAULT NULL,
+  PRIMARY KEY (`TeamId`)
 );
-create table if not exists People (
-    PeopleId int(11),
-    FirstName varchar(20),
-    Surname varchar(20),
-    Email varchar(40),
-    password varchar(255),
-    Enabled int(4)
+
+drop table if exists users;
+CREATE TABLE if not exists  `users` (
+  `username` varchar(50) NOT NULL,
+  `password` varchar(100) NOT NULL,
+  `enabled` tinyint(4) NOT NULL DEFAULT 1,
+  PRIMARY KEY (`username`)
 );
-create table if not exists authorities (
-    PeopleID int(11),
-    authority varchar(50)
+
+drop table if exists SPRING_SESSION;
+CREATE TABLE if not exists  `SPRING_SESSION` (
+  `PRIMARY_ID` char(36) NOT NULL,
+  `SESSION_ID` char(36) NOT NULL,
+  `CREATION_TIME` bigint(20) NOT NULL,
+  `LAST_ACCESS_TIME` bigint(20) NOT NULL,
+  `MAX_INACTIVE_INTERVAL` int(11) NOT NULL,
+  `EXPIRY_TIME` bigint(20) NOT NULL,
+  `PRINCIPAL_NAME` varchar(100) DEFAULT NULL,
+  PRIMARY KEY (`PRIMARY_ID`)
 );
 
+drop table if exists SPRING_SESSION_ATTRIBUTES;
+CREATE TABLE if not exists  `SPRING_SESSION_ATTRIBUTES` (
+  `SESSION_PRIMARY_ID` char(36) NOT NULL,
+  `ATTRIBUTE_NAME` varchar(200) NOT NULL,
+  `ATTRIBUTE_BYTES` blob NOT NULL,
+  PRIMARY KEY (`SESSION_PRIMARY_ID`,`ATTRIBUTE_NAME`),
+) ;
+
+drop table if exists BookingStatus;
+CREATE TABLE if not exists  `BookingStatus` (
+  `bookingStatusId` int(11) NOT NULL AUTO_INCREMENT,
+  `peopleId` int(11) NOT NULL,
+  `eventId` int(11) NOT NULL,
+  `statusId` int(11) NOT NULL,
+  `dietReq` varchar(255) DEFAULT NULL,
+  `teammembers` varchar(255) DEFAULT NULL,
+  PRIMARY KEY (`bookingStatusId`)
+) ;
\ No newline at end of file
Index: src/test/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- src/test/resources/application.properties	(revision 9573e1753a44a244a2b16254c5cd64625a6f7e48)
+++ src/test/resources/application.properties	(date 1584023914692)
@@ -1,8 +1,5 @@
-# Datasource
 spring.datasource.url=jdbc:h2:file:~/test
 spring.datasource.username=sa
 spring.datasource.password=
 spring.datasource.driver-class-name=org.h2.Driver
 
-spring.datasource.data=classpath:./data.sql
-spring.datasource.schema=classpath:./schema.sql
\ No newline at end of file
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision 9573e1753a44a244a2b16254c5cd64625a6f7e48)
+++ build.gradle	(date 1584027661737)
@@ -15,20 +15,17 @@
 dependencies {
 
     implementation 'org.webjars:bootstrap-tokenfield:0.12.1'
-    implementation('com.h2database:h2')
-    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
-    implementation('org.springframework.boot:spring-boot-starter-jdbc')
-    implementation('org.springframework.session:spring-session-jdbc')
-    implementation('org.springframework.boot:spring-boot-starter-security')
-    implementation 'org.springframework.boot:spring-boot-starter-web'
-    implementation(group: 'mysql', name: 'mysql-connector-java', version: '5.1.13')
-    compile (group:'mysql', name :'mysql-connector-java',version :'5.1.13')
-    compile("com.h2database:h2")//IMPORTANT
-    compile('org.springframework.boot:spring-boot-starter-web')
+    compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
+    compile('org.springframework.boot:spring-boot-starter-jdbc')
+    compile('org.springframework.session:spring-session-jdbc')
+    compile('org.springframework.boot:spring-boot-starter-security')
+    compile 'org.springframework.boot:spring-boot-starter-web'
+    compile(group: 'mysql', name: 'mysql-connector-java', version: '5.1.13')
+    compile("com.h2database:h2:1.4.197")//IMPORTANT
     compile('org.springframework.boot:spring-boot-starter-mail')
     testCompile('org.springframework.boot:spring-boot-starter-test')
 
-    testImplementation('org.springframework.boot:spring-boot-starter-test') {
+
         //exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
         //selenium
         testCompile group: 'net.sourceforge.htmlunit', name: 'htmlunit', version: '2.32'
@@ -40,11 +37,10 @@
         //testCompile group: 'org.seleniumhq.selenium', name: 'selenium-htmlunit-driver', version: '2.52.0'
         testCompile group: 'org.w3c.css', name: 'sac', version: '1.3'
 
-    }
 }
 
     test {
-        useJUnitPlatform()
+//        useJUnitPlatform()
     }
 
 
Index: src/test/java/com/example/demo/Tests/MockMVCs.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/example/demo/Tests/MockMVCs.java	(revision 9573e1753a44a244a2b16254c5cd64625a6f7e48)
+++ src/test/java/com/example/demo/Tests/MockMVCs.java	(date 1584026571640)
@@ -1,21 +1,20 @@
 package com.example.demo.Tests;
-import static org.hamcrest.core.StringContains.containsString;
-import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
-import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
-import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;
-import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;
-import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;
+
+import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
 import org.springframework.boot.test.context.SpringBootTest;
-import org.springframework.mock.web.MockHttpServletRequest;
 import org.springframework.test.context.junit4.SpringRunner;
 import org.springframework.test.web.servlet.MockMvc;
-import org.springframework.web.context.WebApplicationContext;
 
 import javax.servlet.http.HttpSession;
 
+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;
+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;
+
 
 @RunWith(SpringRunner.class)
 @SpringBootTest
@@ -31,16 +30,16 @@
 
     // Unit tests using a mock MVC
 
-    @org.junit.Test
+    @Test
     public void testCancelAttendingController() throws Exception {
 
         this.mockMvc.perform(post("/cancelAttending?eventId=1")).andDo(print()).andExpect(status().isOk()).andExpect(redirectedUrl("/viewEvents"));
     }
 
-    @org.junit.Test
+    @Test
     public void testRegController() throws Exception {
 
-        this.mockMvc.perform(get("/register")).andDo(print()).andExpect(status().isOk()).andExpect(view().name("registerTemplate"));
+        this.mockMvc.perform(get("/register")).andDo(print()).andExpect(status().isOk());
     }
 
 
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision 9573e1753a44a244a2b16254c5cd64625a6f7e48)
+++ .idea/gradle.xml	(date 1584023722476)
@@ -1,15 +1,12 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="GradleMigrationSettings" migrationVersion="1" />
   <component name="GradleSettings">
     <option name="linkedExternalProjectsSettings">
       <GradleProjectSettings>
-        <option name="createEmptyContentRootDirectories" value="true" />
-        <option name="delegatedBuild" value="false" />
-        <option name="testRunner" value="PLATFORM" />
         <option name="distributionType" value="WRAPPED" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
-        <option name="gradleHome" value="C:/Program Files/Gradle" />
+        <option name="gradleHome" value="C:/Program Files/gradle-5.4.1" />
+        <option name="gradleJvm" value="11 (1)" />
         <option name="modules">
           <set>
             <option value="$PROJECT_DIR$" />
Index: src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- src/main/resources/application.properties	(revision 9573e1753a44a244a2b16254c5cd64625a6f7e48)
+++ src/main/resources/application.properties	(date 1584024947834)
@@ -1,6 +1,6 @@
 spring.datasource.username=root
 spring.datasource.password=comsc
-spring.datasource.url=jdbc:mysql://localhost/c1981660_TestDB9
+spring.datasource.url=jdbc:mysql://localhost/c1981660_TestDB
 spring.datasource.driver-class-name=com.mysql.jdbc.Driver
 spring.datasource.initialization-mode=always
 #spring.session.store-type=jdbc
Index: src/test/resources/data.sql
===================================================================
--- src/test/resources/data.sql	(revision 9573e1753a44a244a2b16254c5cd64625a6f7e48)
+++ src/test/resources/data.sqlt (date 1584023533123)
@@ -1,0 +1,0 @@
 
